name: Buildozer

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip openjdk-8-jdk wget unzip
        pip3 install cython
        sudo apt-get install -f
        sudo dpkg --configure -a
        sudo apt install -y build-essential git python3-dev ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev libgstreamer1.0-0 libgstreamer-plugins-base1.0-dev libunwind-dev
        pip3 install buildozer
        pip3 install git+https://github.com/kivy/python-for-android.git

    - name: Set up Java 8
      run: |
        sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
        sudo update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac

    - name: Install JAXB
      run: |
        wget https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-impl/2.3.0/jaxb-impl-2.3.0.jar
        wget https://repo1.maven.org/maven2/com/sun/xml/bind/jaxb-core/2.3.0/jaxb-core-2.3.0.jar
        wget https://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar
        sudo mkdir -p /usr/share/java/jaxb
        sudo mv jaxb-impl-2.3.0.jar /usr/share/java/jaxb/
        sudo mv jaxb-core-2.3.0.jar /usr/share/java/jaxb/
        sudo mv jaxb-api-2.3.0.jar /usr/share/java/jaxb/
        echo 'export CLASSPATH=$CLASSPATH:/usr/share/java/jaxb/jaxb-api-2.3.0.jar:/usr/share/java/jaxb/jaxb-core-2.3.0.jar:/usr/share/java/jaxb/jaxb-impl-2.3.0.jar' >> $GITHUB_ENV

    - name: Set up Android SDK
      run: |
        mkdir -p $HOME/.buildozer/android/platform/android-sdk
        cd $HOME/.buildozer/android/platform/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O android_cmd_tools.zip
        unzip android_cmd_tools.zip -d cmdline-tools
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
        yes | JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 cmdline-tools/latest/bin/sdkmanager --licenses
        JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 cmdline-tools/latest/bin/sdkmanager --update
        JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;30.0.3"

    - name: Set up Android NDK
      run: |
        mkdir -p $HOME/.buildozer/android/platform
        cd $HOME/.buildozer/android/platform
        wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip android-ndk-r25b-linux.zip
        mv android-ndk-r25b ndk
      env:
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

    - name: Build with Buildozer
      env:
        ANDROIDSDK: $HOME/.buildozer/android/platform/android-sdk
        ANDROIDNDK: $HOME/.buildozer/android/platform/ndk
        ANDROIDAPI: 31
        ANDROIDMINAPI: 21
      run: |
        buildozer -v android debug 2>&1 | tee buildozer_full.log

    - name: Upload Buildozer Log
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: buildozer-log
        path: buildozer_full.log
